
;----Includes BEGIN

 INCLUDE stm32G0_constants.s
 INCLUDE core_cm0_plus_constants.s

;----Includes END
 AREA main,Code,READONLY
 EXPORT __main
 ENTRY
__main PROC
;USER CODE BEGIN 1


 BL RCC_CONFIG
 BL ADC_IN11_Config
 BL TIM2_CH2_Config

 LDR r0,=TIM2_BASE
 LDR r2,[r0, #TIM_CCR2]
 LDR r4,[r0, #TIM_ARR]
 LSRS r4,#1 ;TIM period divided by 2
 LDR r1,=0xFFFFFFFF
 BICS r2,r2,r1
 
 ORRS r2,r2,r4
 STR r2,[r0, #TIM_CCR2]
;USER CODE END 1
;While loop begin
 LDR r3,=0xFFFF
loop
;USER CODE BEGIN 2
;READ ADC
 LDR r0,=ADC1_BASE
 LDR r1,[r0, #ADC_DR]


;UPDATE VALUE 
 LDR r0,=TIM2_BASE
 LDR r2,[r0, #TIM_CCR2]
 LDR r4,[r0, #TIM_ARR]
 BICS r2,r2,r4
 MULS r1,r4,r1
 LSRS r1,#12
 ORRS r2,r2,r1
 STR r2,[r0, #TIM_CCR2]
;DELAY
 BL Delay
;USER CODE END 2
 B loop
 ENDP

Delay PROC
    PUSH {LR}
    LDR R1,=1000000 ; Number of cycles per millisecond
Lop
    SUBS R1, R1, #1
    BNE Lop
    POP {PC}
	ENDP
RCC_CONFIG PROC
 PUSH{LR}
 LDR r0,=RCC_BASE
 LDR r1,[r0, #RCC_APBENR1]
 LDR r2,=RCC_APBENR1_TIM2EN
 ORRS r1,r1,r2
 STR r1, [r0,#RCC_APBENR1]
 LDR r0,=RCC_BASE
 LDR r1,[r0, #RCC_IOPENR]
 LDR r2,=RCC_IOPENR_GPIOAEN
 ORRS r1,r1,r2
 STR r1, [r0,#RCC_IOPENR]
 LDR r0,=RCC_BASE
 LDR r1,[r0, #RCC_APBENR2]
 LDR r2,=RCC_APBENR2_ADCEN
 ORRS r1,r1,r2
 STR r1, [r0,#RCC_APBENR2]
 LDR r0, =RCC_BASE
 LDR r1, [r0, #RCC_IOPENR]
 LDR r2, =RCC_IOPENR_GPIOBEN
 ORRS r1, r1, r2
 STR r1, [r0, #RCC_IOPENR]
 POP{PC}
 ENDP


ADC_IN11_Config PROC
 PUSH{LR}
 LDR r0, =GPIOB_BASE
 LDR r1, [r0, #GPIO_MODER]
 LDR r2, =GPIO_MODER_MODE7 ;3<<2*7
 BICS r1, r1, r2
 LDR r2, =GPIO_MODER_MODE7_0  ;3<<2*7
 ORRS r1,r1,r2
 LDR r2, =GPIO_MODER_MODE7_1  ;3<<2*7
 ORRS r1,r1,r2
 STR r1, [r0, #GPIO_MODER]
 LDR r0,=ADC1_BASE
 LDR r1,[r0, #ADC_CFGR1]
 LDR r2,=ADC_CFGR1_CONT
 ORRS r1,r1,r2
 STR r1,[r0, #ADC_CFGR1]
 LDR r1,[r0, #ADC_CHSELR]
 LDR r2,=ADC_CHSELR_CHSEL11
 ORRS r1,r1,r2
 STR r1,[r0, #ADC_CHSELR]
 LDR r1,[r0, #ADC_CR]
 LDR r2,=ADC_CR_ADEN
 ORRS r1,r1,r2
 STR r1,[r0, #ADC_CR]
 LDR r1,[r0, #ADC_CR]
 LDR r2,=ADC_CR_ADSTART
 ORRS r1,r1,r2
 STR r1,[r0, #ADC_CR]
 POP{PC}
 ENDP

TIM2_CH2_Config PROC
 PUSH{LR}
;Config of GPIO PORT AS ALternate Function
 LDR r0,=GPIOA_BASE
 LDR r1,[r0,#GPIO_MODER]
 LDR r2,=GPIO_MODER_MODE1
 BICS r1,r1,r2
 LDR r2,=GPIO_MODER_MODE1_1
 ORRS r1,r1,r2
 STR r1,[r0,#GPIO_MODER]
 LDR r1,[r0,#GPIO_AFR0]
 LDR r2,=GPIO_AFRL_AFSEL1
 BICS r1,r1,r2
 LDR r2,=GPIO_AFRL_AFSEL1_1
 ORRS r1,r1,r2
 STR r1,[r0,#GPIO_AFR0]
 LDR r0,=TIM2_BASE
 LDR r1,[r0,#TIM_PSC]
 LDR r2,=0xFFFFFFFF
 BICS r1,r1,r2
 LDR r2,=1599
 ORRS r1,r1,r2
 STR r1,[r0,#TIM_PSC]
 LDR r1,[r0,#TIM_ARR]
 LDR r2,=0xFFFFFFFF
 BICS r1,r1,r2
 LDR r2,=1000
 ORRS r1,r1,r2
 STR r1,[r0,#TIM_ARR]
 ;PWM MODE CONFIG
 LDR r1,[r0,#TIM_CCER]
 LDR r2,=TIM_CCER_CC2E
 BICS r1,r1,r2
 STR r1,[r0,#TIM_CCER]
 LDR r1,[r0,#TIM_CCMR1]
 LDR r2,=TIM_CCMR1_CC2S
 BICS r1,r1,r2
 STR r1,[r0,#TIM_CCMR1]
 LDR r1,[r0,#TIM_CCMR1]
 LDR r2,=TIM_CCMR1_OC2M
 BICS r1,r1,r2
 LDR r2,=TIM_CCMR1_OC2M_1
 ORRS r1,r1,r2
 LDR r2,=TIM_CCMR1_OC2M_2
 ORRS r1,r1,r2
 STR r1,[r0,#TIM_CCMR1]
 LDR r1,[r0,#TIM_CCER]
 LDR r2,= TIM_CCER_CC2E
 BICS r1,r1,r2
 LDR r2,= TIM_CCER_CC2E
 ORRS r1,r1,r2
 STR r1,[r0,#TIM_CCER]
 ;Preload Enable
 
 LDR r1,[r0,#TIM_CR1]
 LDR r2,=TIM_CR1_ARPE
 BICS r1,r1,r2
 LDR r2,=TIM_CR1_ARPE
 ORRS r1,r1,r2
 STR r1,[r0,#TIM_CR1]
 
 ;Counter ENABLE
 LDR r1,[r0,#TIM_CR1]
 LDR r2,=TIM_CR1_CEN
 BICS r1,r1,r2
 LDR r2,=TIM_CR1_CEN
 ORRS r1,r1,r2
 STR r1,[r0,#TIM_CR1]
 POP{PC}
 ENDP
 ALIGN 4
 END
